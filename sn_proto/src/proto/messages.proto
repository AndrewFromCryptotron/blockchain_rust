syntax = "proto3";

package messages;

service Node {

	rpc Handshake(Version) returns (Version);

	rpc HandleTransaction(Transaction) returns (Confirmed);

}

message Block {

	Header msg_header = 1;

	repeated Transaction msg_transactions = 2; 

	bytes msg_public_key = 3;

	bytes msg_signature = 4;

}

message Confirmed { }

message Header {

	int32 msg_version = 1;

	int32 msg_height = 2;

	bytes msg_previous_hash = 3;

	bytes msg_root_hash = 4;
    
	int64 msg_timestamp = 5;

}

message TransactionInput {

	bytes msg_previous_tx_hash = 1;

	uint32 msg_previous_out_index = 2;

	bytes msg_public_key = 3;

	bytes msg_signature = 4;

}

message TransactionOutput {

	int64 msg_amount = 1;

	bytes msg_address = 2;

}

message Transaction {

	int32 msg_version = 1;

	repeated TransactionInput msg_inputs = 2;

	repeated TransactionOutput msg_outputs = 3;

}

message Version {

	string msg_version = 1;

	int32 msg_height = 2;

	string msg_listen_address = 3;

	repeated string msg_peer_list = 4;
    
}